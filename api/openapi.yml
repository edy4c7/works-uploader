openapi: "3.0.2"
info:
  title: Works uploader
  version: "1.0"
components:
  schemas:
    WorkId:
      description: 作品ID
      type: string
    WorkType:
      description: 作品ID
      type: integer 
      format: int32
    Timestamp:
      type: string
      format: date-time
      description: タイムスタンプ
    User:
      type: object
      description: ユーザーアカウントの情報
      properties:
        localId:
          type: string
          description: ユーザー識別のために一意に割り当ててられる文字列
        displayName:
          type: string
          description: 画面に表示されるユーザー名
        photoUrl:
          type: string
          format: url
          description: アバター用画像ファイルのURL
    UserId:
      type: string
    Page:
      type: object
      properties:
        totalItems:
          description: 作品の全体件数
          type: integer
    Work:
      type: object
      description: 作品データ
      properties:
        id:
          $ref: "#/components/schemas/WorkId"
        type:
          $ref: "#/components/schemas/WorkType"
        title:
          description: タイトル
          type: string
        author:
          description: 作者のユーザーID
          allOf:
            - $ref: "#/components/schemas/UserId"
        description:
          description: 説明文
          type: string
        thumbnailUrl:
          description: サムネイルのURL
          type: string
          format: url
        contentUrl:
          description: 作品本体のURL
          type: string
          format: url
        version:
          description: バージョン
          type: integer
          format: long
        createdAt:
          description: 作成日
          allOf:
            - $ref: "#/components/schemas/Timestamp"
        updatededAt:
          description: 更新日
          allOf:
            - $ref: "#/components/schemas/Timestamp"
    Activity:
      description: 
        活動履歴データ。
        「誰がいつ何をどうした」を表す。
      type: object
      properties:
        id:
          description: アクティビティID
          type: string
        user:
          description: アクティビティを発生させたユーザー
          allOf:
            - $ref: "#/components/schemas/UserId"
        type:
          description: アクティビティの種別
          type: integer
          format: int32
        target:
          description: アクティビティに関連する作品
          allOf:
            - $ref: "#/components/schemas/Work"
        timestamp:
          description: アクティビティの発生日
          allOf:
            - $ref: "#/components/schemas/Timestamp"
    Error:
      description: エラー情報
      type: object
      properties:
        code:
          description: エラーコード
          type: string
        message:
          description: エラーメッセージ
          type: string
  parameters:
    workId:
      description: 作品ID
      name: id
      in: path
      required: true
      schema:
        $ref: "#/components/schemas/WorkId"
    offset:
      description: 開始行数
      name: offset
      in: query
      schema:
        type: integer
        format: int32
        default: 0
    limit:
      description: 取得件数
      name: limit
      in: query
      schema:
        type: integer
        format: int32
        default: 200
  requestBodies:
    Work:
      description: アップロードする作品データ
      content:
        multipart/form-data:
          schema:
            type: object
            required:
              - type
              - title
            properties:
              type:
                description: 作品種別
                type: number
              title:
                description: タイトル
                type: string
              description:
                description: 説明文
                type: string
              thumbnail:
                description: サムネイル
                type: string
                format: binary
              content:
                description: 作品本体のファイル
                type: string
                format: binary
              url:
                description: 作品本体のURL
                type: string
              version:
                description: バージョン
                type: number
          examples:
            url_valid:
              summary: Upload with URL
              value:
                type: 1
                title: "Hoge"  
                description: "Upload with URL"
                url: "https://example.com"
            file_valid:
              summary: Upload with URL
              value:
                type: 1
                title: "Hoge"  
                description: "Upload with URL"
                thumbnail: "thumbnail"
                content: "content"
            url_invalid:
              summary: Upload with URL (invalid)
              value:
                type: 1
                title: "Hoge"  
                description: "Upload with URL"
                url: "https://example.com"
            file_invalid:
              summary: Upload with URL (invalid)
              value:
                type: 1
                title: "Hoge"  
                description: "Upload with URL"
                thumbnail: "thumbnail"
                content: "content"
  responses:
    OK:
      description: "OK"
    BadRequest:
      description: "リクエストパラメータ不正"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
    NotFound:
      description: "リソースが見つからない"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
  securitySchemes:
    Bearer:
      type: http
      scheme: bearer
      description: Bearer token
  examples:
    Work:
      value:
        id: 1
        type: 1
        title: 作品01
        author: abcd1234
        description: 小説だよ
        thumbnailUrl: https://example.com
        contentUrl: https://example.com
        version: 1
        createdAt: 2019-08-24T14:15:22Z
        updatedAt: 2019-08-24T14:15:22Z
paths:
  /works:
    get:
      summary: 作品データ取得
      parameters:
        - $ref: "#/components/parameters/offset"
        - $ref: "#/components/parameters/limit"
      responses:
        200:
          description: "作品データ"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/Page"
                items: 
                  description: 作品データ
                  type: array
                  items: 
                    $ref: "#/components/schemas/Work"
              examples:
                default:
                  value:
                    totalItems: 2
                    offset: 0
                    items:
                      - id: 1
                        type: 1
                        title: 作品01
                        author: abcd1234
                        description: 小説だよ
                        thumbnailUrl: https://example.com
                        contentUrl: https://example.com
                        version: 1
                        createdAt: 2019-08-24T14:15:22Z
                        updatedAt: 2019-08-24T14:15:22Z
                      - id: 2
                        type: 2
                        title: 作品02
                        author: efgh5678
                        description: 絵画でございますわ
                        thumbnailUrl: https://example.com
                        contentUrl: https://example.com
                        version: 1
                        createdAt: 2019-08-24T14:15:22Z
                        updatedAt: 2019-08-24T14:15:22Z
        400: 
          $ref: "#/components/responses/BadRequest"
    post:
      summary: 作品データ投稿
      security:
        - Bearer: []
      requestBody:
        $ref: "#/components/requestBodies/Work"
      responses:
        200: 
          description: OK
          content:
            application/json:
              schema: 
                $ref: "#/components/schemas/Work"
              examples:
                url_valid:
                  $ref: "#/components/examples/Work"
                file_valid:
                  $ref: "#/components/examples/Work"
        400: 
          $ref: "#/components/responses/BadRequest"
  /works/{id}:
    get:
      summary: 作品データ個別取得
      parameters:
        - $ref: "#/components/parameters/workId"
      responses:
        200:
          description: 作品データ
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Work"
              examples:
                default:
                  $ref: "#/components/examples/Work"
        404: 
          $ref: "#/components/responses/NotFound"
    put:
      summary: 作品データ修正
      security:
        - Bearer: []
      parameters:
        - $ref: "#/components/parameters/workId"
      requestBody:
        $ref: "#/components/requestBodies/Work"
      responses:
        200: 
          $ref: "#/components/responses/OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Work"
              examples:
                default:
                  $ref: "#/components/examples/Work"
        400: 
          $ref: "#/components/responses/BadRequest"
        404: 
          $ref: "#/components/responses/NotFound"
    delete:
      summary: 作品データ削除
      security:
        - Bearer: []
      parameters:
        - $ref: "#/components/parameters/workId"
      responses:
        200: 
          $ref: "#/components/responses/OK"
        404: 
          $ref: "#/components/responses/NotFound"
  /activities:
    get:
      summary: アクティビティデータ取得
      parameters:
        - $ref: "#/components/parameters/offset"
        - $ref: "#/components/parameters/limit"
        - name: user
          description: アクティビティを取得したいユーザーのID
          in: query
          schema:
            type: string
      responses:
        200:
          description: アクティビティデータ
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Activity"
              examples:
                default:
                  value:
                    - id: 1
                      userId: abcd1234
                      type: 0
                      target:
                        id: 1
                        author: abcd1234
                        title: 作品01
                        description: 小説だよ
                        thumbnailUrl: https://example.com
                        contentUrl: https://example.com
                        createdAt: 2019-08-24T14:15:22Z
                        updatedAt: 2019-08-24T14:15:22Z
                      timestamp: 2019-08-24T14:15:22Z
                    - id: 2
                      userId: abcd1234
                      type: 0
                      target:
                        id: 1
                        author: abcd1234
                        title: 作品01
                        description: 小説だよ
                        thumbnailUrl: https://example.com
                        contentUrl: https://example.com
                        createdAt: 2019-08-24T14:15:22Z
                        updatedAt: 2019-08-24T14:15:22Z
                      timestamp: 2019-08-24T14:15:22Z